@page "/about"
@using System.Runtime.InteropServices
@using System.Security.Claims
@inherits MelodeeComponentBase

@inject IMelodeeConfigurationFactory MelodeeConfigurationFactory

<PageTitle>About</PageTitle>

<RadzenStack Orientation="Orientation.Vertical">
    <RadzenText TextStyle="TextStyle.H4">
        @_siteTitle
    </RadzenText>
    <RadzenCard>
        <RadzenStack>
            <RadzenText TextStyle="TextStyle.H6" Text="About Server"/>
            <dl>
                @foreach (var serverStat in _serverStats.OrderBy(x => x.Key))
                {
                    <dt>@serverStat.Key</dt>
                    <dd>@((MarkupString)(serverStat.Value ?? string.Empty))</dd>
                }
            </dl>
        </RadzenStack>
    </RadzenCard>
    <RadzenCard>
        <RadzenStack>
            <RadzenText TextStyle="TextStyle.H6" Text="About You"/>
            <dl>
                @foreach (var claim in _userClaimsToDisplay)
                {
                    <dt>@claim.Type</dt>
                    <dd>@claim.Value</dd>
                }
            </dl>
        </RadzenStack>
    </RadzenCard>
</RadzenStack>

@code {

    string _siteTitle = string.Empty;
    readonly List<KeyValue> _serverStats = [];
    readonly List<Claim> _userClaimsToDisplay = [];

    readonly string[] _showClaimTypes =
    [
        "HTTP://SCHEMAS.MICROSOFT.COM/WS/2008/06/IDENTITY/CLAIMS/ROLE",
        "HTTP://SCHEMAS.XMLSOAP.ORG/WS/2005/05/IDENTITY/CLAIMS/SID",
        "HTTP://SCHEMAS.XMLSOAP.ORG/WS/2005/05/IDENTITY/CLAIMS/NAME",
        "HTTP://SCHEMAS.XMLSOAP.ORG/WS/2005/05/IDENTITY/CLAIMS/EMAILADDRESS"
    ];

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var configuration = await MelodeeConfigurationFactory.GetConfigurationAsync();
        _siteTitle = configuration.GetValue<string>(SettingRegistry.OpenSubsonicServerType) ?? string.Empty;

        _serverStats.Add(new KeyValue("API: Melodee Version", configuration.ApiVersion()));
        _serverStats.Add(new KeyValue("API: OpenSubsonic/SubSonic API Version", configuration.GetValue<string>(SettingRegistry.OpenSubsonicServerVersion) ?? string.Empty));
        _serverStats.Add(new KeyValue("dotnet core version", RuntimeInformation.FrameworkDescription));
        _serverStats.Add(new KeyValue("Melodee", "Melodee music system <a target=\"_blank\" href=\"https://github.com/melodee-project\">GitHub</a>"));
        _serverStats.Add(new KeyValue("UI Version", typeof(Program).Assembly.GetName().Version?.ToString() ?? string.Empty));

        _userClaimsToDisplay.AddRange(CurrentUser?.Claims.Where(x => _showClaimTypes.Contains(x.Type.ToUpper())) ?? []);
    }

}
